Q1. write a trigger on contact to prevent duplicate records based on contact email & contact phone.
Ans : 1] event:before
	  2}operation:insert, update
	  3]object on trigger:contact
	  4}afating object: contact old 
	  5]use field: email, phone.
	  
TRIGGER CLASS:
	
trigger duplicateContact on Contact(before insert, before update){
	if(trigger.isBefore && trigger.isInsert){
	
	contactTriggerHandler.checkingDuplicates(Trigger.new, null);
	}
	if(trigger.isBefore && trigger.isUpdate){
	contactTriggerHandler.checkingDuplicates(Trigger.new , trigger.oldMap);
	}
}

HANDLER CLASS:
	public static void CheckingDuplicates(List<Contact> conList, Map<Id, Contact> oldMap){
		list<Contact> existingContact = [SELECT Id,Name,Phone,Email FROM Contact WHERE (Email !=null OR Phone!=null)];
		
		map<String,Contact> phoneMap = new map<string, Contact>();
		map<String,Contact> emailMap = new map<string, Contact>();
		
		for(Contact objCon : existingContact){
			phoneMap.put(objCon.Phone, objCon);
			emailMap.put(objCon.Email, objCon);
		}
		for(Contact con: conList){
		if((con.email != null && emailMap.containsKey(con.email))||(con.email!=null && emailMap.containsKey(con.Email) && con.email != oldMap.get(con.Id).email)){
			con.email.addError('duplicate email Found');
		}
		if((con.Phone!=null && phoneMap.containsKey(con.Phone))||(con.phone!=null && phoneMap.containsKey(con.Phone) && con.phone != oldMap.get(con.Id).phone)){
			con.Phone.addError('duplicate phone Found');
		}
		}
	}